import { Resource as $Resource } from "../template/Resource.js";
import { ResourceOptions as $ResourceOptions } from "../template.js";
/**
 * Resource Type definition for AWS::EC2::EIP
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html}
 */
export type EC2EIPProperties = {
  /**
   * Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic.
   */
  Domain?: string;
  /**
   * The ID of the instance.
   */
  InstanceId?: string;
  /**
   * A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
   */
  NetworkBorderGroup?: string;
  /**
   * The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
   */
  PublicIpv4Pool?: string;
  /**
   * Any tags assigned to the EIP.
   */
  Tags?: Tag[];
  /**
   * The PublicIP of the EIP generated by resource through transfer from another account
   */
  TransferAddress?: string;
};
/**
 * Attribute type definition for `AWS::EC2::EIP`.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#aws-resource-ec2-eip-return-values}
 */
export type EC2EIPAttributes = {
  /**
   * The Allocation ID of the EIP generated by resource.
   */
  AllocationId: string;
  /**
   * The PublicIP of the EIP generated by resource.
   */
  PublicIp: string;
};
/**
 * Type definition for `AWS::EC2::EIP.Tag`.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-tag.html}
 */
export type Tag = {
  Key: string;
  Value: string;
};
/**
 * Resource Type definition for AWS::EC2::EIP
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html}
 */
export class EC2EIP extends $Resource<
  "AWS::EC2::EIP",
  EC2EIPProperties,
  EC2EIPAttributes
> {
  public static readonly Type = "AWS::EC2::EIP";
  public static readonly AttributeNames = [
    "AllocationId" as const,
    "PublicIp" as const,
  ];
  constructor(
    logicalId: string,
    properties: EC2EIPProperties,
    options?: $ResourceOptions,
  ) {
    super(logicalId, EC2EIP.Type, properties, EC2EIP.AttributeNames, options);
  }
}
