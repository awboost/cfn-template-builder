import { Resource as $Resource } from "../template/Resource.js";
import { ResourceOptions as $ResourceOptions } from "../template.js";
/**
 * Resource type definition for `AWS::EC2::VPNGateway`.
 * Schema for EC2 VPN Gateway
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngateway.html}
 */
export type EC2VPNGatewayProperties = {
  /**
   * The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
   */
  AmazonSideAsn?: number;
  /**
   * Any tags assigned to the virtual private gateway.
   */
  Tags?: Tag[];
  /**
   * The type of VPN connection the virtual private gateway supports.
   */
  Type: string;
};
/**
 * Attribute type definition for `AWS::EC2::VPNGateway`.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngateway.html#aws-resource-ec2-vpngateway-return-values}
 */
export type EC2VPNGatewayAttributes = {
  /**
   * VPN Gateway ID generated by service
   */
  VPNGatewayId: string;
};
/**
 * Type definition for `AWS::EC2::VPNGateway.Tag`.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpngateway-tag.html}
 */
export type Tag = {
  Key: string;
  Value: string;
};
/**
 * Resource type definition for `AWS::EC2::VPNGateway`.
 * Schema for EC2 VPN Gateway
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngateway.html}
 */
export class EC2VPNGateway extends $Resource<
  "AWS::EC2::VPNGateway",
  EC2VPNGatewayProperties,
  EC2VPNGatewayAttributes
> {
  public static readonly Type = "AWS::EC2::VPNGateway";
  public static readonly AttributeNames = ["VPNGatewayId" as const];
  constructor(
    logicalId: string,
    properties: EC2VPNGatewayProperties,
    options?: $ResourceOptions,
  ) {
    super(
      logicalId,
      EC2VPNGateway.Type,
      properties,
      EC2VPNGateway.AttributeNames,
      options,
    );
  }
}
