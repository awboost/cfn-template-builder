import { Resource as $Resource } from "../template/Resource.js";
import { ResourceOptions as $ResourceOptions } from "../template.js";
/**
 * The ``AWS::ApiGatewayV2::Route`` resource creates a route for an API.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html}
 */
export type ApiGatewayV2RouteProperties = {
  /**
   * The API identifier.
   */
  ApiId: string;
  /**
   * Specifies whether an API key is required for the route. Supported only for WebSocket APIs.
   */
  ApiKeyRequired?: boolean;
  /**
   * The authorization scopes supported by this route.
   */
  AuthorizationScopes?: string[];
  /**
   * The authorization type for the route. For WebSocket APIs, valid values are ``NONE`` for open access, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer. For HTTP APIs, valid values are ``NONE`` for open access, ``JWT`` for using JSON Web Tokens, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer.
   */
  AuthorizationType?: string;
  /**
   * The identifier of the ``Authorizer`` resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.
   */
  AuthorizerId?: string;
  /**
   * The model selection expression for the route. Supported only for WebSocket APIs.
   */
  ModelSelectionExpression?: string;
  /**
   * The operation name for the route.
   */
  OperationName?: string;
  /**
   * The request models for the route. Supported only for WebSocket APIs.
   */
  RequestModels?: Record<string, any>;
  /**
   * The request parameters for the route. Supported only for WebSocket APIs.
   */
  RequestParameters?: Record<string, any>;
  /**
   * The route key for the route. For HTTP APIs, the route key can be either ``$default``, or a combination of an HTTP method and resource path, for example, ``GET /pets``.
   */
  RouteKey: string;
  /**
   * The route response selection expression for the route. Supported only for WebSocket APIs.
   */
  RouteResponseSelectionExpression?: string;
  /**
   * The target for the route.
   */
  Target?: string;
};
/**
 * Attribute type definition for `AWS::ApiGatewayV2::Route`.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#aws-resource-apigatewayv2-route-return-values}
 */
export type ApiGatewayV2RouteAttributes = {
  RouteId: string;
};
/**
 * Type definition for `AWS::ApiGatewayV2::Route.ParameterConstraints`.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-route-parameterconstraints.html}
 */
export type ParameterConstraints = {
  Required: boolean;
};
/**
 * The ``AWS::ApiGatewayV2::Route`` resource creates a route for an API.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html}
 */
export class ApiGatewayV2Route extends $Resource<
  "AWS::ApiGatewayV2::Route",
  ApiGatewayV2RouteProperties,
  ApiGatewayV2RouteAttributes
> {
  public static readonly Type = "AWS::ApiGatewayV2::Route";
  public static readonly AttributeNames = ["RouteId" as const];
  constructor(
    logicalId: string,
    properties: ApiGatewayV2RouteProperties,
    options?: $ResourceOptions,
  ) {
    super(
      logicalId,
      ApiGatewayV2Route.Type,
      properties,
      ApiGatewayV2Route.AttributeNames,
      options,
    );
  }
}
