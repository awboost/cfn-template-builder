import { Resource as $Resource } from "../template/Resource.js";
import { ResourceOptions as $ResourceOptions } from "../template.js";
/**
 * Resource Type definition for AWS::EC2::LaunchTemplate
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html}
 */
export type EC2LaunchTemplateProperties = {
  /**
   * The information for the launch template.
   */
  LaunchTemplateData: LaunchTemplateData;
  /**
   * A name for the launch template.
   */
  LaunchTemplateName?: string;
  /**
   * The tags to apply to the launch template on creation.
   */
  TagSpecifications?: LaunchTemplateTagSpecification[];
  /**
   * A description for the first version of the launch template.
   */
  VersionDescription?: string;
};
/**
 * Attribute type definition for `AWS::EC2::LaunchTemplate`.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#aws-resource-ec2-launchtemplate-return-values}
 */
export type EC2LaunchTemplateAttributes = {
  /**
   * The default version of the launch template
   */
  DefaultVersionNumber: string;
  /**
   * The latest version of the launch template
   */
  LatestVersionNumber: string;
  /**
   * LaunchTemplate ID generated by service
   */
  LaunchTemplateId: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.AcceleratorCount`.
 * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferential chips) on an instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html}
 */
export type AcceleratorCount = {
  /**
   * The maximum number of accelerators.
   */
  Max?: number;
  /**
   * The minimum number of accelerators.
   */
  Min?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.AcceleratorTotalMemoryMiB`.
 * The minimum and maximum amount of total accelerator memory, in MiB.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html}
 */
export type AcceleratorTotalMemoryMiB = {
  /**
   * The maximum amount of accelerator memory, in MiB.
   */
  Max?: number;
  /**
   * The minimum amount of accelerator memory, in MiB.
   */
  Min?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.BaselineEbsBandwidthMbps`.
 * The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html}
 */
export type BaselineEbsBandwidthMbps = {
  /**
   * The maximum baseline bandwidth, in Mbps.
   */
  Max?: number;
  /**
   * The minimum baseline bandwidth, in Mbps.
   */
  Min?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.BlockDeviceMapping`.
 * Information about a block device mapping for an Amazon EC2 launch template.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html}
 */
export type BlockDeviceMapping = {
  /**
   * The user data to make available to the instance.
   */
  DeviceName?: string;
  /**
   * Parameters for a block device for an EBS volume in an Amazon EC2 launch template.
   */
  Ebs?: Ebs;
  /**
   * To omit the device from the block device mapping, specify an empty string.
   */
  NoDevice?: string;
  /**
   * The virtual device name (ephemeralN).
   */
  VirtualName?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.CapacityReservationSpecification`.
 * Specifies an instance's Capacity Reservation targeting option.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationspecification.html}
 */
export type CapacityReservationSpecification = {
  /**
   * Indicates the instance's Capacity Reservation preferences.
   */
  CapacityReservationPreference?: string;
  /**
   * Specifies a target Capacity Reservation.
   */
  CapacityReservationTarget?: CapacityReservationTarget;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.CapacityReservationTarget`.
 * Specifies a target Capacity Reservation.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html}
 */
export type CapacityReservationTarget = {
  /**
   * The ID of the Capacity Reservation in which to run the instance.
   */
  CapacityReservationId?: string;
  /**
   * The ARN of the Capacity Reservation resource group in which to run the instance.
   */
  CapacityReservationResourceGroupArn?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.CpuOptions`.
 * specifies the CPU options for an instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-cpuoptions.html}
 */
export type CpuOptions = {
  /**
   * Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only.
   */
  AmdSevSnp?: "enabled" | "disabled";
  /**
   * The number of CPU cores for the instance.
   */
  CoreCount?: number;
  /**
   * The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.
   */
  ThreadsPerCore?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.CreditSpecification`.
 * The user data to make available to the instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-creditspecification.html}
 */
export type CreditSpecification = {
  /**
   * The user data to make available to the instance.
   */
  CpuCredits?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.Ebs`.
 * Parameters for a block device for an EBS volume in an Amazon EC2 launch template.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html}
 */
export type Ebs = {
  /**
   * Indicates whether the EBS volume is deleted on instance termination.
   */
  DeleteOnTermination?: boolean;
  /**
   * Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can't specify an encryption value.
   */
  Encrypted?: boolean;
  /**
   * The number of I/O operations per second (IOPS).
   */
  Iops?: number;
  /**
   * The ARN of the symmetric AWS Key Management Service (AWS KMS) CMK used for encryption.
   */
  KmsKeyId?: string;
  /**
   * The ID of the snapshot.
   */
  SnapshotId?: string;
  /**
   * The throughput to provision for a gp3 volume, with a maximum of 1,000 MiB/s.
   */
  Throughput?: number;
  /**
   * The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size.
   */
  VolumeSize?: number;
  /**
   * The volume type.
   */
  VolumeType?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.ElasticGpuSpecification`.
 * Specifies a specification for an Elastic GPU for launch template.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html}
 */
export type ElasticGpuSpecification = {
  /**
   * The type of Elastic Graphics accelerator.
   */
  Type?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.EnaSrdSpecification`.
 * Allows customer to specify ENA-SRD options
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-enasrdspecification.html}
 */
export type EnaSrdSpecification = {
  /**
   * Enables TCP ENA-SRD
   */
  EnaSrdEnabled?: boolean;
  /**
   * Allows customer to specify ENA-SRD (UDP) options
   */
  EnaSrdUdpSpecification?: EnaSrdUdpSpecification;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.EnaSrdUdpSpecification`.
 * Allows customer to specify ENA-SRD (UDP) options
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-enasrdudpspecification.html}
 */
export type EnaSrdUdpSpecification = {
  /**
   * Enables UDP ENA-SRD
   */
  EnaSrdUdpEnabled?: boolean;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.EnclaveOptions`.
 * Indicates whether the instance is enabled for AWS Nitro Enclaves.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-enclaveoptions.html}
 */
export type EnclaveOptions = {
  /**
   * If this parameter is set to true, the instance is enabled for AWS Nitro Enclaves; otherwise, it is not enabled for AWS Nitro Enclaves.
   */
  Enabled?: boolean;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.HibernationOptions`.
 * Specifies whether your instance is configured for hibernation.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-hibernationoptions.html}
 */
export type HibernationOptions = {
  /**
   * TIf you set this parameter to true, the instance is enabled for hibernation.
   */
  Configured?: boolean;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.IamInstanceProfile`.
 * Specifies an IAM instance profile, which is a container for an IAM role for your instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-iaminstanceprofile.html}
 */
export type IamInstanceProfile = {
  /**
   * The Amazon Resource Name (ARN) of the instance profile.
   */
  Arn?: string;
  /**
   * The name of the instance profile.
   */
  Name?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.InstanceMarketOptions`.
 * The market (purchasing) option for the instances.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-instancemarketoptions.html}
 */
export type InstanceMarketOptions = {
  /**
   * The market type.
   */
  MarketType?: string;
  /**
   * Specifies options for Spot Instances.
   */
  SpotOptions?: SpotOptions;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.InstanceRequirements`.
 * The attributes for the instance types.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-instancerequirements.html}
 */
export type InstanceRequirements = {
  /**
   * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferential chips) on an instance.
   */
  AcceleratorCount?: AcceleratorCount;
  /**
   * Indicates whether instance types must have accelerators by specific manufacturers.
   */
  AcceleratorManufacturers?: string[];
  /**
   * The accelerators that must be on the instance type.
   */
  AcceleratorNames?: string[];
  /**
   * The minimum and maximum amount of total accelerator memory, in MiB.
   */
  AcceleratorTotalMemoryMiB?: AcceleratorTotalMemoryMiB;
  /**
   * The accelerator types that must be on the instance type.
   */
  AcceleratorTypes?: string[];
  /**
   * The instance types to apply your specified attributes against.
   */
  AllowedInstanceTypes?: string[];
  /**
   * Indicates whether bare metal instance types must be included, excluded, or required.
   */
  BareMetal?: string;
  /**
   * The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps.
   */
  BaselineEbsBandwidthMbps?: BaselineEbsBandwidthMbps;
  BurstablePerformance?: string;
  /**
   * The CPU manufacturers to include.
   */
  CpuManufacturers?: string[];
  /**
   * The instance types to exclude.
   */
  ExcludedInstanceTypes?: string[];
  /**
   * Indicates whether current or previous generation instance types are included.
   */
  InstanceGenerations?: string[];
  /**
   * The user data to make available to the instance.
   */
  LocalStorage?: string;
  /**
   * The type of local storage that is required.
   */
  LocalStorageTypes?: string[];
  /**
   * The minimum and maximum amount of memory per vCPU, in GiB.
   */
  MemoryGiBPerVCpu?: MemoryGiBPerVCpu;
  /**
   * The minimum and maximum amount of memory, in MiB.
   */
  MemoryMiB?: MemoryMiB;
  /**
   * The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).
   */
  NetworkBandwidthGbps?: NetworkBandwidthGbps;
  /**
   * TThe minimum and maximum number of network interfaces.
   */
  NetworkInterfaceCount?: NetworkInterfaceCount;
  /**
   * The price protection threshold for On-Demand Instances.
   */
  OnDemandMaxPricePercentageOverLowestPrice?: number;
  /**
   * Indicates whether instance types must support hibernation for On-Demand Instances.
   */
  RequireHibernateSupport?: boolean;
  /**
   * The price protection threshold for Spot Instances.
   */
  SpotMaxPricePercentageOverLowestPrice?: number;
  /**
   * The minimum and maximum amount of total local storage, in GB.
   */
  TotalLocalStorageGB?: TotalLocalStorageGB;
  /**
   * The minimum and maximum number of vCPUs.
   */
  VCpuCount?: VCpuCount;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.Ipv4PrefixSpecification`.
 * Specifies an IPv4 prefix for a network interface.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv4prefixspecification.html}
 */
export type Ipv4PrefixSpecification = {
  /**
   * The IPv4 prefix.
   */
  Ipv4Prefix?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.Ipv6Add`.
 * Specifies an IPv6 address.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html}
 */
export type Ipv6Add = {
  Ipv6Address?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.Ipv6PrefixSpecification`.
 * Specifies an IPv6 prefix for a network interface.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6prefixspecification.html}
 */
export type Ipv6PrefixSpecification = {
  Ipv6Prefix?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.LaunchTemplateData`.
 * The information for the launch template.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html}
 */
export type LaunchTemplateData = {
  /**
   * The block device mapping.
   */
  BlockDeviceMappings?: BlockDeviceMapping[];
  /**
   * Specifies an instance's Capacity Reservation targeting option.
   */
  CapacityReservationSpecification?: CapacityReservationSpecification;
  /**
   * specifies the CPU options for an instance.
   */
  CpuOptions?: CpuOptions;
  /**
   * The user data to make available to the instance.
   */
  CreditSpecification?: CreditSpecification;
  /**
   * Indicates whether to enable the instance for stop protection.
   */
  DisableApiStop?: boolean;
  /**
   * If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API.
   */
  DisableApiTermination?: boolean;
  /**
   * Indicates whether the instance is optimized for Amazon EBS I/O.
   */
  EbsOptimized?: boolean;
  /**
   * An elastic GPU to associate with the instance.
   */
  ElasticGpuSpecifications?: ElasticGpuSpecification[];
  /**
   * The elastic inference accelerator for the instance.
   */
  ElasticInferenceAccelerators?: LaunchTemplateElasticInferenceAccelerator[];
  /**
   * Indicates whether the instance is enabled for AWS Nitro Enclaves.
   */
  EnclaveOptions?: EnclaveOptions;
  /**
   * Specifies whether your instance is configured for hibernation.
   */
  HibernationOptions?: HibernationOptions;
  /**
   * Specifies an IAM instance profile, which is a container for an IAM role for your instance.
   */
  IamInstanceProfile?: IamInstanceProfile;
  /**
   * The ID of the AMI. Alternatively, you can specify a Systems Manager parameter, which will resolve to an AMI ID on launch.
   */
  ImageId?: string;
  /**
   * Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
   */
  InstanceInitiatedShutdownBehavior?: string;
  /**
   * The market (purchasing) option for the instances.
   */
  InstanceMarketOptions?: InstanceMarketOptions;
  /**
   * The attributes for the instance types.
   */
  InstanceRequirements?: InstanceRequirements;
  InstanceType?: string;
  /**
   * The ID of the kernel.
   */
  KernelId?: string;
  /**
   * The name of the EC2 key pair
   */
  KeyName?: string;
  /**
   * The license configurations.
   */
  LicenseSpecifications?: LicenseSpecification[];
  /**
   * The maintenance options of your instance.
   */
  MaintenanceOptions?: MaintenanceOptions;
  /**
   * The metadata options for the instance.
   */
  MetadataOptions?: MetadataOptions;
  /**
   * Specifies whether detailed monitoring is enabled for an instance.
   */
  Monitoring?: Monitoring;
  /**
   * If you specify a network interface, you must specify any security groups and subnets as part of the network interface.
   */
  NetworkInterfaces?: NetworkInterface[];
  /**
   * Specifies the placement of an instance.
   */
  Placement?: Placement;
  /**
   * Describes the options for instance hostnames.
   */
  PrivateDnsNameOptions?: PrivateDnsNameOptions;
  RamDiskId?: string;
  /**
   * One or more security group IDs.
   */
  SecurityGroupIds?: string[];
  /**
   * One or more security group names.
   */
  SecurityGroups?: string[];
  /**
   * The tags to apply to the resources that are created during instance launch.
   */
  TagSpecifications?: TagSpecification[];
  /**
   * The user data to make available to the instance.
   */
  UserData?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.LaunchTemplateElasticInferenceAccelerator`.
 * Specifies an elastic inference accelerator.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html}
 */
export type LaunchTemplateElasticInferenceAccelerator = {
  /**
   * The number of elastic inference accelerators to attach to the instance.
   */
  Count?: number;
  /**
   * The type of elastic inference accelerator.
   */
  Type?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.LaunchTemplateTagSpecification`.
 * Specifies the tags to apply to the launch template during creation.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html}
 */
export type LaunchTemplateTagSpecification = {
  /**
   * The type of resource to tag.
   */
  ResourceType?: string;
  /**
   * The tags for the resource.
   */
  Tags?: Tag[];
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.LicenseSpecification`.
 * Specifies a license configuration for an instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html}
 */
export type LicenseSpecification = {
  /**
   * The Amazon Resource Name (ARN) of the license configuration.
   */
  LicenseConfigurationArn?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.MaintenanceOptions`.
 * The maintenance options of your instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-maintenanceoptions.html}
 */
export type MaintenanceOptions = {
  /**
   * Disables the automatic recovery behavior of your instance or sets it to default.
   */
  AutoRecovery?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.MemoryGiBPerVCpu`.
 * The minimum and maximum amount of memory per vCPU, in GiB.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html}
 */
export type MemoryGiBPerVCpu = {
  /**
   * The maximum amount of memory per vCPU, in GiB.
   */
  Max?: number;
  /**
   * TThe minimum amount of memory per vCPU, in GiB.
   */
  Min?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.MemoryMiB`.
 * The minimum and maximum amount of memory, in MiB.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html}
 */
export type MemoryMiB = {
  /**
   * The maximum amount of memory, in MiB.
   */
  Max?: number;
  /**
   * The minimum amount of memory, in MiB.
   */
  Min?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.MetadataOptions`.
 * The metadata options for the instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-metadataoptions.html}
 */
export type MetadataOptions = {
  /**
   * Enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled.
   */
  HttpEndpoint?: string;
  /**
   * Enables or disables the IPv6 endpoint for the instance metadata service.
   */
  HttpProtocolIpv6?: string;
  /**
   * The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
   */
  HttpPutResponseHopLimit?: number;
  /**
   * IMDSv2 uses token-backed sessions.
   */
  HttpTokens?: string;
  /**
   * Set to enabled to allow access to instance tags from the instance metadata.
   */
  InstanceMetadataTags?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.Monitoring`.
 * Specifies whether detailed monitoring is enabled for an instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-monitoring.html}
 */
export type Monitoring = {
  /**
   * Specify true to enable detailed monitoring.
   */
  Enabled?: boolean;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.NetworkBandwidthGbps`.
 * The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkbandwidthgbps.html}
 */
export type NetworkBandwidthGbps = {
  /**
   * The maximum amount of network bandwidth, in Gbps.
   */
  Max?: number;
  /**
   * The minimum amount of network bandwidth, in Gbps.
   */
  Min?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.NetworkInterface`.
 * Specifies the parameters for a network interface.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html}
 */
export type NetworkInterface = {
  /**
   * Indicates whether to associate a Carrier IP address with eth0 for a new network interface.
   */
  AssociateCarrierIpAddress?: boolean;
  /**
   * Associates a public IPv4 address with eth0 for a new network interface.
   */
  AssociatePublicIpAddress?: boolean;
  /**
   * Indicates whether the network interface is deleted when the instance is terminated.
   */
  DeleteOnTermination?: boolean;
  /**
   * A description for the network interface.
   */
  Description?: string;
  /**
   * The device index for the network interface attachment.
   */
  DeviceIndex?: number;
  /**
   * Allows customer to specify ENA-SRD options
   */
  EnaSrdSpecification?: EnaSrdSpecification;
  /**
   * The IDs of one or more security groups.
   */
  Groups?: string[];
  /**
   * The type of network interface.
   */
  InterfaceType?: string;
  /**
   * The number of IPv4 prefixes to be automatically assigned to the network interface.
   */
  Ipv4PrefixCount?: number;
  /**
   * One or more IPv4 prefixes to be assigned to the network interface.
   */
  Ipv4Prefixes?: Ipv4PrefixSpecification[];
  /**
   * The number of IPv6 addresses to assign to a network interface.
   */
  Ipv6AddressCount?: number;
  /**
   * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet.
   */
  Ipv6Addresses?: Ipv6Add[];
  /**
   * The number of IPv6 prefixes to be automatically assigned to the network interface.
   */
  Ipv6PrefixCount?: number;
  /**
   * One or more IPv6 prefixes to be assigned to the network interface.
   */
  Ipv6Prefixes?: Ipv6PrefixSpecification[];
  /**
   * The index of the network card.
   */
  NetworkCardIndex?: number;
  /**
   * The ID of the network interface.
   */
  NetworkInterfaceId?: string;
  /**
   * Enables the first IPv6 global unique address (GUA) on a dual stack or IPv6-only ENI immutable.
   */
  PrimaryIpv6?: boolean;
  /**
   * The primary private IPv4 address of the network interface.
   */
  PrivateIpAddress?: string;
  /**
   * One or more private IPv4 addresses.
   */
  PrivateIpAddresses?: PrivateIpAdd[];
  /**
   * The number of secondary private IPv4 addresses to assign to a network interface.
   */
  SecondaryPrivateIpAddressCount?: number;
  /**
   * The ID of the subnet for the network interface.
   */
  SubnetId?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.NetworkInterfaceCount`.
 * TThe minimum and maximum number of network interfaces.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html}
 */
export type NetworkInterfaceCount = {
  Max?: number;
  Min?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.Placement`.
 * Specifies the placement of an instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-placement.html}
 */
export type Placement = {
  /**
   * The affinity setting for an instance on a Dedicated Host.
   */
  Affinity?: string;
  /**
   * The Availability Zone for the instance.
   */
  AvailabilityZone?: string;
  /**
   * The Group Id of a placement group. You must specify the Placement Group Group Id to launch an instance in a shared placement group.
   */
  GroupId?: string;
  /**
   * The name of the placement group for the instance.
   */
  GroupName?: string;
  /**
   * The ID of the Dedicated Host for the instance.
   */
  HostId?: string;
  /**
   * The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host.
   */
  HostResourceGroupArn?: string;
  /**
   * The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
   */
  PartitionNumber?: number;
  /**
   * Reserved for future use.
   */
  SpreadDomain?: string;
  /**
   * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.
   */
  Tenancy?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.PrivateDnsNameOptions`.
 * Describes the options for instance hostnames.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privatednsnameoptions.html}
 */
export type PrivateDnsNameOptions = {
  /**
   * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
   */
  EnableResourceNameDnsAAAARecord?: boolean;
  /**
   * Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
   */
  EnableResourceNameDnsARecord?: boolean;
  /**
   * The type of hostname for EC2 instances.
   */
  HostnameType?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.PrivateIpAdd`.
 * Specifies a secondary private IPv4 address for a network interface.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html}
 */
export type PrivateIpAdd = {
  /**
   * Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.
   */
  Primary?: boolean;
  /**
   * The private IPv4 address.
   */
  PrivateIpAddress?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.SpotOptions`.
 * Specifies options for Spot Instances.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-spotoptions.html}
 */
export type SpotOptions = {
  /**
   * Deprecated
   */
  BlockDurationMinutes?: number;
  /**
   * The behavior when a Spot Instance is interrupted. The default is terminate.
   */
  InstanceInterruptionBehavior?: string;
  /**
   * The maximum hourly price you're willing to pay for the Spot Instances.
   */
  MaxPrice?: string;
  /**
   * The Spot Instance request type.
   */
  SpotInstanceType?: string;
  /**
   * The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
   */
  ValidUntil?: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.Tag`.
 * The user data to make available to the instance.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tag.html}
 */
export type Tag = {
  Key: string;
  Value: string;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.TagSpecification`.
 * Specifies the tags to apply to a resource when the resource is created for the launch template.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html}
 */
export type TagSpecification = {
  /**
   * The type of resource to tag.
   */
  ResourceType?: string;
  /**
   * The tags for the resource.
   */
  Tags?: Tag[];
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.TotalLocalStorageGB`.
 * The minimum and maximum amount of total local storage, in GB.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html}
 */
export type TotalLocalStorageGB = {
  Max?: number;
  Min?: number;
};
/**
 * Type definition for `AWS::EC2::LaunchTemplate.VCpuCount`.
 * The minimum and maximum number of vCPUs.
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html}
 */
export type VCpuCount = {
  /**
   * The maximum number of vCPUs.
   */
  Max?: number;
  /**
   * The minimum number of vCPUs.
   */
  Min?: number;
};
/**
 * Resource Type definition for AWS::EC2::LaunchTemplate
 * @see {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html}
 */
export class EC2LaunchTemplate extends $Resource<
  "AWS::EC2::LaunchTemplate",
  EC2LaunchTemplateProperties,
  EC2LaunchTemplateAttributes
> {
  public static readonly Type = "AWS::EC2::LaunchTemplate";
  public static readonly AttributeNames = [
    "DefaultVersionNumber" as const,
    "LatestVersionNumber" as const,
    "LaunchTemplateId" as const,
  ];
  constructor(
    logicalId: string,
    properties: EC2LaunchTemplateProperties,
    options?: $ResourceOptions,
  ) {
    super(
      logicalId,
      EC2LaunchTemplate.Type,
      properties,
      EC2LaunchTemplate.AttributeNames,
      options,
    );
  }
}
